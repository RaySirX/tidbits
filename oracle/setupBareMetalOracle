#! /bin/bash -x
#
#U NAME
#U    setupBareMetalOracle - Configure server for Oracle on bare-metal
#U
#U SYNOPSIS
#U    setupBareMetalOracle
#U
#U DESCRIPTION
#U    Configure server for Oracle on bare-metal RedHat 7
#U    DO NOT USE as is.  Not meant for "copy/paste" Admins.
#U
#U OPTIONS
#U    NONE
#U
#
# History
#     Raymond Tai - Feb 15, 2017 - Initial Implementation
#
function usage() {
# usage - Any comment in script starting with '#U' will show up in "usage"
  egrep "^#U" $0 | sed -e 's/^#U //g' -e 's/^#U//g'
  exit 1
}

function timestamp() {
  date +"%F %T"
}

function logMessage() {
  echo $(timestamp) - $1
}

function logSection() {
  logMessage "-------------------------------------------"
  logMessage "$1"
  logMessage "-------------------------------------------"
}

function onErrorExit() {
# onErrorExit - if status is non-zero print message and exit
  local status=$1
  local message=${2:-Exiting due to unexpected status code ${status}}
  if [ ${_status} -ne 0 ]; then
     logSection $2
     exit 998
  fi
}

{ set +x; } 2>/dev/null
logSection "$0 Setup"
{ set -x; } 2>/dev/null
HOSTIP=$(egrep ^IPADDR= /etc/sysconfig/network-scripts/ifcfg-bond0 | cut -d'=' -f2)
HOSTNAME=$(hostname | cut -d'.' -f1)
HOSTNAME_UC=${HOSTNAME^^}
HOSTNAME_LC=${HOSTNAME,,}

setup_base_pkgs() {
  local _pkgs
  _pkgs=$(cat <<-EOF | egrep -v "^#|^$" | paste -s -d' ' -
# BASE OS
bind-utils
net-tools
nmap-ncat
traceroute

# VNC
tigervnc
tigervnc-icons
tigervnc-license

# NFS
nfs-utils
rpcbind

# iSCSI
iscsi-initiator-utils
device-mapper-multipath

# Misc
ed
gdk-pixbuf2
gtk2
libtool-ltdl
poppler-data
psmisc
qt3
qt
qt-settings
qt-x11
rsync
time

# Oracle tuning
tuned-profiles-oracle

# Oracle base
binutils
compat-libcap1
compat-libstdc++-33
gcc
gcc-c++
glibc
glibc-devel
ksh
libaio
libaio-devel
libgcc
libstdc++
libstdc++-devel
libXi
libXtst
make
sysstat
EOF
)

  yum -y install ${_pkgs}
  yum -y groupinstall "X Window System"

  wget -O /tmp/$$.epel.rpm http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm
  yum -y install /tmp/$$.epel.rpm
  _pkgs=$(cat <<-EOF | egrep -v "^#|^$" | paste -s -d' ' -
# Base Utils
rlwrap
htop
atop
EOF
)
  yum -y install ${_pkgs}
}

setup_disable_NetworkManager() {
  systemctl disable NetworkManager
  systemctl stop NetworkManager
}

setup_etc_hosts() {
  sed "/^${HOSTIP}/d" /etc/hosts > /tmp/$$.etc-hosts
  cat <<-EOF >> /tmp/$$.etc-hosts
${HOSTIP} ${HOSTNAME_UC}.<domain goes here> ${HOSTNAME_UC}
EOF

  cp /etc/hosts /tmp/$$.etc-hosts.bak
  cp /tmp/$$.etc-hosts /etc/hosts
}

setup_hostname() {
  hostnamectl --static set-hostname ${HOSTNAME_UC}
}

setup_route() {
  local routeFile

  if [ ${HOSTIP} =~ ^10.115.169 ]; then
     sed -i '/10.114.143.128\/26/d' /etc/sysconfig/network-scripts/route-bond0
  fi

  if [ ${HOSTIP} =~ ^10.114.143 ]; then
     sed -i '/10.115.169.0\/24/d' /etc/sysconfig/network-scripts/route-bond0
  fi
}

setup_resolv_conf() {
  cat <<-EOF > /etc/resolv.conf
nameserver <DNS IP goes here>
nameserver <DNS IP goes here>
EOF
}

setup_histtimeformat() {
  cat <<-EOF > /etc/profile.d/histtimeformat.sh
export HISTTIMEFORMAT='%F %T '
EOF
  chmod 644 /etc/profile.d/histtimeformat.sh
}

setup_swapfile() {
  if [ -f /swapfile01 ]; then
     return
  fi

  dd if=/dev/zero of=/swapfile01 bs=1024 count=16777216
  chmod 600 /swapfile01
  mkswap /swapfile01
  swapon /swapfile01
  swapoff /dev/sda2

  sed '/^UUID=.*swap/d' /etc/fstab > /tmp/$$-etc-fstab
  sed -i '/^\/swapfile01/d' /tmp/$$-etc-fstab
  cat <<-EOF >> /tmp/$$-etc-fstab
/swapfile01                               swap                    swap    defaults        0 0
EOF

  cp /etc/fstab /tmp/$$-etc-fstab.bak
  cp /tmp/$$-etc-fstab /etc/fstab
}

setup_tune_oracle() {
  tuned-adm profile oracle
}

setup_disable_ipv6() {
  cat <<-EOF > /etc/sysctl.d/50-oracle
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
EOF
  chmod 644 /etc/sysctl.d/50-oracle
}

setup_docker() {
  <download docker from somewhere and install it>
  yum -y install /tmp/$$.docker-engine.rpm /tmp/$$.docker-engine-selinux.rpm
  systemctl enable docker
  systemctl start docker
}

setup_app_user() {
# make sure docker is installed first!
  useradd -c "app user in docker container" -d /home/app -m -s /bin/bash -g docker -u 5001 app
}

setup_oracle_user() {
  groupadd -g 54321 oracle
  groupadd -g 54322 dba
  groupadd -g 54324 oinstall
  useradd -c "oracle" -d /home/oracle -m -s /bin/bash -g dba -G oinstall,oracle -u 54321 oracle
}

setup_oracle_passwd() {
  cp /etc/shadow /tmp/$$.etc-shadow
  chmod 600 /tmp/$$.etc-shadow
  sed -i '/^oracle/d' /etc/shadow
  cat <<-EOF >> /etc/shadow
oracle:<encrypted passwd goes here.  make sure to escape out '$' with '\'>:17207:0:99999:7:::
EOF
}

setup_oracle_deploy_user() {
  mkdir -m 700 /home/oracle/.ssh
  chown oracle:dba /home/oracle/.ssh
  touch /home/oracle/.ssh/authorized_keys
  chown oracle:dba /home/oracle/.ssh/authorized_keys
  chmod 600 /home/oracle/.ssh/authorized_keys

cat <<-EOF >> /home/oracle/.ssh/authorized_keys
# Start of keys added by the automated provisioning system
<SSH key goes here>
# End of keys added by the automated provisioning system
EOF
}

setup_oracle_rlwrap() {
  cat <<- EOF > /etc/profile.d/sqlplus.sh
alias sqlplus="rlwrap sqlplus"
EOF
  chmod 644 /etc/profile.d/sqlplus.sh
}

setup_oracle_bash_profile() {
  touch /home/oracle/.bash_profile
  chown oracle:dba /home/oracle/.bash_profile
  cat <<- EOF > /home/oracle/.bash_profile
# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi

# User specific environment and startup programs

PATH=$PATH:$HOME/.local/bin:$HOME/bin

export PATH

## Oracle Env Settings

export TMP=/tmp
export TMPDIR=$TMP

export ORACLE_BASE=/u01/app/oracle
export ORACLE_HOME=$ORACLE_BASE/product/12.1.0/db_1
export ORACLE_SID=<SID goes here>
export TNS_ADMIN=$ORACLE_HOME/network/admin

export EDITOR=vi
export PATH=/usr/sbin:$PATH
export PATH=$ORACLE_HOME/bin:$PATH

export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
export PS1='ORACLE@-$HOSTNAME $PWD $ '


EOF
}

{ set +x; } 2>/dev/null
logSection "$0 Main"
{ set -x; } 2>/dev/null
setupSequence=${1:-setup_disable_NetworkManager setup_base_pkgs setup_hostname setup_etc_hosts setup_route setup_resolv_conf setup_swapfile setup_histtimeformat setup_tune_oracle setup_disable_ipv6 setup_docker setup_app_user setup_oracle_user setup_oracle_passwd setup_oracle_deploy_user setup_oracle_rlwrap setup_oracle_bash_profile}

for i in ${setupSequence}; do
  { set +x; } 2>/dev/null
  logSection $i
  { set -x; } 2>/dev/null
  $i
done

{ set +x; } 2>/dev/null
logSection "$0 Done"
